#define  nMADS 18 // number of MA grid divisions
#define  nX 45    // Number of X grid divisions

double DsDxBilinearInterpAxials(double MAtest, double Xtest) {

  double NormDsDx[nMADS][nX];

  // mass of A' in GeV
  double MMAA[nMADS] = {0.000001, 0.00001, 0.00002, 0.00003, 0.00004, 0.00005, 0.00006, 0.00007, 0.0001, 0.00015, 0.0002, 0.0003, 0.0004, 0.0005, 0.0006, 0.0007, 0.0008, 0.0009};

  // Fraction carried out by A'
  double XX00[nX] = {0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99,0.9999,0.99991,0.99992,0.99993,0.99994,0.99995,0.99996,0.99997,0.99998,0.99999};

double NormOnMaxDPDsDxETL1keVEe20GeV[nX]={0.0105208, 0.0206232, 0.0308125, 0.0410259, 0.0512494, 0.0614779, 0.0717088, 0.0819415, 0.0921756, 0.102411, 0.153591, 0.204775, 0.25596, 0.307144, 0.358327, 0.409507, 0.460685, 0.511858, 0.563025, 0.614186, 0.665335, 0.716468, 0.767573, 0.818633, 0.869595, 0.920327, 0.930395, 0.940462, 0.950411, 0.96036, 0.970018, 0.979676, 0.988176, 0.996677, 1., 0.351453, 0.320538, 0.289624, 0.25871, 0.227795, 0.196881, 0.165967, 0.0829834, 0., 0.};
double NormOnMaxDPDsDxETL10keVEe20GeV[nX]={0.013659, 0.0258289, 0.03637, 0.0461651, 0.0558107, 0.0654949, 0.0752581, 0.0850981, 0.0950036, 0.104962, 0.155257, 0.205959, 0.256854, 0.307839, 0.358881, 0.409955, 0.46105, 0.512156, 0.563269, 0.614384, 0.665494, 0.716594, 0.767671, 0.818706, 0.869645, 0.920363, 0.930424, 0.940486, 0.950431, 0.960376, 0.97003, 0.979685, 0.988182, 0.996679, 1., 0.351452, 0.320537, 0.289623, 0.258709, 0.227795, 0.19688, 0.165966, 0.0829831, 0., 0.};
double NormOnMaxDPDsDxETL20keVEe20GeV[nX]={0.0144623, 0.0272959, 0.0398696, 0.0515705, 0.0623608, 0.0725261, 0.0823454, 0.0920032, 0.101607, 0.111215, 0.159845, 0.209367, 0.259477, 0.309902, 0.360535, 0.411295, 0.462144, 0.513053, 0.564002, 0.61498, 0.665976, 0.716976, 0.767965, 0.818922, 0.869798, 0.92045, 0.930503, 0.940556, 0.950491, 0.960425, 0.97007, 0.979714, 0.988202, 0.996689, 1., 0.351448, 0.320534, 0.289621, 0.258707, 0.227793, 0.196879, 0.165965, 0.0829824, 0., 0.};
double NormOnMaxDPDsDxETL30keVEe20GeV[nX]={0.0151734, 0.0280708, 0.0408969, 0.0535656, 0.0657206, 0.077204, 0.0880599, 0.0984235, 0.108442, 0.118236, 0.166199, 0.2145, 0.263579, 0.313196, 0.36321, 0.413479, 0.463939, 0.514525, 0.565211, 0.615965, 0.666771, 0.717606, 0.768454, 0.819287, 0.87005, 0.920608, 0.93064, 0.940672, 0.950589, 0.960506, 0.970134, 0.979762, 0.988233, 0.996705, 1., 0.351443, 0.32053, 0.289616, 0.258703, 0.227789, 0.196876, 0.165962, 0.0829811, 0., 0.};
double NormOnMaxDPDsDxETL40keVEe20GeV[nX]={0.0157267, 0.0288432, 0.0416338, 0.0544485, 0.0671454, 0.0794988, 0.0913648, 0.102708, 0.11357, 0.12403, 0.17304, 0.220703, 0.268807, 0.317524, 0.366788, 0.416434, 0.466385, 0.516545, 0.566875, 0.617325, 0.667871, 0.71848, 0.769132, 0.819791, 0.8704, 0.920821, 0.930827, 0.940834, 0.950727, 0.96062, 0.970224, 0.979828, 0.988277, 0.996726, 1., 0.351436, 0.320523, 0.28961, 0.258697, 0.227785, 0.196872, 0.165959, 0.0829794, 0., 0.};
double NormOnMaxDPDsDxETL50keVEe20GeV[nX]={0.016153, 0.0295519, 0.0423682, 0.055141, 0.0679372, 0.0806378, 0.0930874, 0.10517, 0.116828, 0.128062, 0.179391, 0.227298, 0.274753, 0.322644, 0.371118, 0.420066, 0.46942, 0.51907, 0.568965, 0.619039, 0.669262, 0.719588, 0.769992, 0.820431, 0.870846, 0.921092, 0.931066, 0.94104, 0.950902, 0.960764, 0.970338, 0.979913, 0.988333, 0.996753, 1., 0.351425, 0.320513, 0.289601, 0.25869, 0.227778, 0.196866, 0.165954, 0.0829772, 0., 0.};
double NormOnMaxDPDsDxETL60keVEe20GeV[nX]={0.0164841, 0.0301703, 0.0430791, 0.0558178, 0.0685775, 0.0813506, 0.0940423, 0.106539, 0.118749, 0.130612, 0.18472, 0.233716, 0.28101, 0.328289, 0.376028, 0.424262, 0.472972, 0.522049, 0.571447, 0.621085, 0.670928, 0.720918, 0.771027, 0.821203, 0.871384, 0.921419, 0.931355, 0.94129, 0.951114, 0.960938, 0.970477, 0.980016, 0.988402, 0.996787, 1., 0.351415, 0.320504, 0.289593, 0.258682, 0.227771, 0.19686, 0.165949, 0.0829745, 0., 0.};
double NormOnMaxDPDsDxETL70keVEe20GeV[nX]={0.0167429, 0.0306982, 0.0437359, 0.0564807, 0.0691879, 0.0819291, 0.0946757, 0.107351, 0.119869, 0.132153, 0.188876, 0.239554, 0.287219, 0.334195, 0.381334, 0.428894, 0.476952, 0.525424, 0.574281, 0.623434, 0.672849, 0.722457, 0.772228, 0.822101, 0.872011, 0.921801, 0.931691, 0.941581, 0.951362, 0.961142, 0.970639, 0.980136, 0.988481, 0.996827, 1., 0.351402, 0.320492, 0.289583, 0.258673, 0.227763, 0.196853, 0.165943, 0.0829714, 0., 0.};
double NormOnMaxDPDsDxETL100keVEe20GeV[nX]={0.0172208, 0.0318225, 0.0452868, 0.0582031, 0.070874, 0.0834664, 0.0960642, 0.108696, 0.121353, 0.134002, 0.195489, 0.251943, 0.303085, 0.351214, 0.39786, 0.444134, 0.490531, 0.537257, 0.58441, 0.631957, 0.679896, 0.728154, 0.776703, 0.825463, 0.874369, 0.923244, 0.932963, 0.942681, 0.952297, 0.961913, 0.971251, 0.980589, 0.988782, 0.996975, 1., 0.351353, 0.320447, 0.289542, 0.258636, 0.22773, 0.196825, 0.165919, 0.0829597, 0., 0.};
double NormOnMaxDPDsDxETL150keVEe20GeV[nX]={0.0174226, 0.0326174, 0.0465936, 0.05985, 0.0726642, 0.0852127, 0.0976145, 0.109951, 0.122274, 0.134618, 0.196731, 0.257998, 0.315828, 0.36961, 0.419602, 0.467151, 0.513141, 0.558444, 0.603536, 0.64873, 0.694202, 0.740009, 0.786194, 0.832708, 0.87951, 0.92642, 0.935767, 0.945113, 0.954368, 0.963622, 0.97261, 0.981598, 0.989451, 0.997305, 1., 0.351242, 0.320346, 0.28945, 0.258554, 0.227658, 0.196762, 0.165867, 0.0829333, 0., 0.};
double NormOnMaxDPDsDxETL200keVEe20GeV[nX]={0.0172036, 0.0325518, 0.0467222, 0.060132, 0.0730247, 0.0855612, 0.0978542, 0.109988, 0.122026, 0.134016, 0.194184, 0.255071, 0.315403, 0.373548, 0.428294, 0.479806, 0.528356, 0.574885, 0.619982, 0.664328, 0.708317, 0.752267, 0.796368, 0.840707, 0.885317, 0.930081, 0.939007, 0.947934, 0.956776, 0.965617, 0.974199, 0.982782, 0.990238, 0.997693, 1., 0.351111, 0.320226, 0.289342, 0.258457, 0.227573, 0.196688, 0.165804, 0.082902, 0., 0.};
double NormOnMaxDPDsDxETL300keVEe20GeV[nX]={0.0160944, 0.0309283, 0.0447674, 0.0578936, 0.070491, 0.0826859, 0.0945706, 0.106216, 0.117679, 0.129005, 0.184735, 0.240729, 0.297999, 0.356188, 0.414379, 0.471517, 0.526595, 0.5793, 0.629341, 0.677117, 0.722841, 0.767099, 0.810222, 0.852659, 0.894639, 0.936306, 0.944566, 0.952827, 0.960984, 0.969141, 0.977024, 0.984908, 0.991656, 0.998404, 1., 0.350869, 0.320005, 0.289142, 0.258279, 0.227416, 0.196552, 0.165689, 0.0828445, 0., 0.};
double NormOnMaxDPDsDxETL400keVEe20GeV[nX]={0.0145566, 0.0282733, 0.0411955, 0.0535053, 0.0653376, 0.07679, 0.0879361, 0.0988331, 0.109527, 0.120058, 0.17123, 0.221782, 0.27325, 0.326255, 0.380988, 0.436917, 0.493385, 0.549524, 0.604545, 0.657988, 0.709296, 0.758554, 0.805679, 0.851039, 0.894763, 0.937174, 0.945447, 0.95372, 0.961823, 0.969926, 0.977694, 0.985462, 0.992038, 0.998614, 1., 0.350792, 0.319936, 0.289079, 0.258223, 0.227366, 0.196509, 0.165653, 0.0828264, 0., 0.};
double NormOnMaxDPDsDxETL500keVEe20GeV[nX]={0.0129077, 0.0252705, 0.0370135, 0.0482499, 0.059076, 0.0695658, 0.0797769, 0.0897553, 0.0995385, 0.109158, 0.155605, 0.200949, 0.246657, 0.293659, 0.342687, 0.393817, 0.447119, 0.502075, 0.558175, 0.614662, 0.67082, 0.726056, 0.779771, 0.831759, 0.88169, 0.92961, 0.93886, 0.948109, 0.957112, 0.966115, 0.974705, 0.983296, 0.990614, 0.997933, 1., 0.351017, 0.320141, 0.289265, 0.258389, 0.227513, 0.196637, 0.165761, 0.0828803, 0., 0.};
double NormOnMaxDPDsDxETL600keVEe20GeV[nX]={0.0113218, 0.0223064, 0.0328117, 0.0429056, 0.0526552, 0.062116, 0.0713327, 0.0803417, 0.0891732, 0.0978527, 0.139629, 0.180115, 0.220582, 0.261989, 0.305216, 0.350672, 0.398915, 0.449863, 0.503638, 0.559725, 0.61779, 0.677068, 0.736917, 0.796599, 0.855394, 0.912742, 0.923902, 0.935063, 0.945968, 0.956873, 0.967342, 0.977811, 0.986971, 0.996132, 1., 0.351629, 0.3207, 0.289771, 0.258842, 0.227913, 0.196984, 0.166055, 0.0830275, 0., 0.};
double NormOnMaxDPDsDxETL700keVEe20GeV[nX]={0.00988324, 0.0195766, 0.0288996, 0.0378912, 0.0465972, 0.0550589, 0.0633105, 0.071381, 0.0792945, 0.0870717, 0.124451, 0.160518, 0.196343, 0.232816, 0.270802, 0.310844, 0.353726, 0.399696, 0.449366, 0.50263, 0.559781, 0.620327, 0.68413, 0.750374, 0.818476, 0.887399, 0.901166, 0.914933, 0.928581, 0.942228, 0.955555, 0.968883, 0.980997, 0.993111, 0.999977, 0.35267, 0.32165, 0.29063, 0.259611, 0.228591, 0.197571, 0.166552, 0.0832758, 0., 0.};
double NormOnMaxDPDsDxETL800keVEe20GeV[nX]={0.00861944, 0.0171548, 0.025403, 0.0333844, 0.0411302, 0.0486706, 0.056032, 0.063237, 0.0703051, 0.0772531, 0.110632, 0.142755, 0.174524, 0.206733, 0.240171, 0.275412, 0.313312, 0.354298, 0.399289, 0.44853, 0.502896, 0.562364, 0.627598, 0.698191, 0.77437, 0.85519, 0.871935, 0.88868, 0.905637, 0.922593, 0.93956, 0.956527, 0.972598, 0.98867, 0.999714, 0.354066, 0.322925, 0.291784, 0.260643, 0.229502, 0.198361, 0.16722, 0.0836099, 0., 0.};
double NormOnMaxDPDsDxETL900keVEe20GeV[nX]={0.00752664, 0.0150461, 0.0223415, 0.0294219, 0.036308, 0.0430218, 0.0495836, 0.0560111, 0.06232, 0.0685241, 0.0983316, 0.126978, 0.155223, 0.183764, 0.213305, 0.244401, 0.277895, 0.314303, 0.354683, 0.399532, 0.450146, 0.506973, 0.571516, 0.644077, 0.726217, 0.817841, 0.837615, 0.857389, 0.877923, 0.898458, 0.919587, 0.940717, 0.961573, 0.982428, 0.998726, 0.355646, 0.324368, 0.29309, 0.261812, 0.230534, 0.199256, 0.167977, 0.0839887, 0., 0.};

  // initialize DsDx matrix
  for (int j = 0; j < nX; j++) {
    NormDsDx[0][j] = NormOnMaxDPDsDxETL1keVEe20GeV[j];
    NormDsDx[1][j] = NormOnMaxDPDsDxETL10keVEe20GeV[j];
    NormDsDx[2][j] = NormOnMaxDPDsDxETL20keVEe20GeV[j];
    NormDsDx[3][j] = NormOnMaxDPDsDxETL30keVEe20GeV[j];
    NormDsDx[4][j] = NormOnMaxDPDsDxETL40keVEe20GeV[j];
    NormDsDx[5][j] = NormOnMaxDPDsDxETL50keVEe20GeV[j];
    NormDsDx[6][j] = NormOnMaxDPDsDxETL60keVEe20GeV[j];
    NormDsDx[7][j] = NormOnMaxDPDsDxETL70keVEe20GeV[j];
    NormDsDx[8][j] = NormOnMaxDPDsDxETL100keVEe20GeV[j];
    NormDsDx[9][j] = NormOnMaxDPDsDxETL150keVEe20GeV[j];
    NormDsDx[10][j] = NormOnMaxDPDsDxETL200keVEe20GeV[j];
    NormDsDx[11][j] = NormOnMaxDPDsDxETL300keVEe20GeV[j];
    NormDsDx[12][j] = NormOnMaxDPDsDxETL400keVEe20GeV[j];
    NormDsDx[13][j] = NormOnMaxDPDsDxETL500keVEe20GeV[j];
    NormDsDx[14][j] = NormOnMaxDPDsDxETL600keVEe20GeV[j];
    NormDsDx[15][j] = NormOnMaxDPDsDxETL700keVEe20GeV[j];
    NormDsDx[16][j] = NormOnMaxDPDsDxETL800keVEe20GeV[j];
    NormDsDx[17][j] = NormOnMaxDPDsDxETL900keVEe20GeV[j];
  }

  // bounds for X

  if (Xtest < XX00[0]) return 0.; // Because the total cross section is obtained from the integration above this

  if (Xtest == XX00[0])
    Xtest = 1.00005 * XX00[0]; //  Lower limit for X

  if (Xtest >= XX00[nX-1] )
    Xtest  = 0.99995 * XX00[nX-1]; // Upper limit for X

  // bounds for mass of Dark state MA
  if (MAtest <= MMAA[0])
    MAtest = 1.00005 * MMAA[0]; //  Lower limit for mass

  if (MAtest >= MMAA[nMADS-1] )
    MAtest  = 0.99995 * MMAA[nMADS-1]; // Upper limit for mass

  return BilinearInterpolation<nX> (MAtest, Xtest, MMAA, XX00, NormDsDx, nMADS, 0);
}
