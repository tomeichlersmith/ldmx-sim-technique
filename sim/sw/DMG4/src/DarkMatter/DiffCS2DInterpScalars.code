#define  nMADS 18 // number of MA grid divisions
#define  nX 45    // Number of X grid divisions

double DsDxBilinearInterpScalars(double MAtest, double Xtest) {

  double NormDsDx[nMADS][nX];

  // mass of A' in GeV
  double MMAA[nMADS] = {0.000001, 0.00001, 0.00002, 0.00003, 0.00004, 0.00005, 0.00006, 0.00007, 0.0001, 0.00015, 0.0002, 0.0003, 0.0004, 0.0005, 0.0006, 0.0007, 0.0008, 0.0009};

  // Fraction carried out by A'
  double XX00[nX] = {0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99,0.9999,0.99991,0.99992,0.99993,0.99994,0.99995,0.99996,0.99997,0.99998,0.99999};

double NormOnMaxDPDsDxETL1keVEe20GeV[nX]={0.53852, 0.280871, 0.187239, 0.139536, 0.110724, 0.0914623, 0.077689, 0.0673576, 0.059326, 0.0529065, 0.0338954, 0.0242374, 0.0186738, 0.0149782, 0.012444, 0.0105765, 0.00919182, 0.00811808, 0.00729006, 0.00663156, 0.0061146, 0.00570007, 0.00537439, 0.00511516, 0.00491499, 0.00475956, 0.00473409, 0.00470863, 0.00468564, 0.00466264, 0.00464116, 0.00461968, 0.00459565, 0.00457162, 0.0045263, 0.00157039, 0.00143224, 0.00129409, 0.00115594, 0.00101779, 0.000879634, 0.000741483, 0.000370741, 0., 0.};
double NormOnMaxDPDsDxETL10keVEe20GeV[nX]={0.307755, 0.837248, 1., 0.962897, 0.871183, 0.775654, 0.690208, 0.617052, 0.555124, 0.502652, 0.333647, 0.241732, 0.187279, 0.150676, 0.125398, 0.106698, 0.092795, 0.0819977, 0.0736586, 0.0670224, 0.0618088, 0.0576269, 0.0543398, 0.0517228, 0.0497017, 0.0481321, 0.0478749, 0.0476177, 0.0473856, 0.0471534, 0.0469364, 0.0467194, 0.0464767, 0.0462339, 0.0457758, 0.0158819, 0.0144847, 0.0130876, 0.0116904, 0.0102932, 0.00889604, 0.00749886, 0.00374943, 0., 0.};
double NormOnMaxDPDsDxETL20keVEe20GeV[nX]={0.0621137, 0.313144, 0.621242, 0.846627, 0.96351, 1., 0.988454, 0.951722, 0.903531, 0.851547, 0.623429, 0.469161, 0.369484, 0.299998, 0.250957, 0.214251, 0.186735, 0.165258, 0.148607, 0.135323, 0.124866, 0.116466, 0.109857, 0.104592, 0.100522, 0.0973612, 0.0968432, 0.0963251, 0.0958574, 0.0953896, 0.0949524, 0.0945152, 0.0940256, 0.0935359, 0.0926105, 0.0321316, 0.0293049, 0.0264782, 0.0236515, 0.0208248, 0.0179981, 0.0151714, 0.0075857, 0., 0.};
double NormOnMaxDPDsDxETL30keVEe20GeV[nX]={0.0214405, 0.12953, 0.318437, 0.53172, 0.718583, 0.855829, 0.942196, 0.986545, 1., 0.992283, 0.8338, 0.664819, 0.53741, 0.442828, 0.373573, 0.32069, 0.2805, 0.248863, 0.224177, 0.2044, 0.18878, 0.176205, 0.166292, 0.158384, 0.152267, 0.147512, 0.146733, 0.145953, 0.145249, 0.144546, 0.143887, 0.143229, 0.142491, 0.141753, 0.140354, 0.0486975, 0.0444134, 0.0401294, 0.0358453, 0.0315613, 0.0272773, 0.0229932, 0.0114966, 0., 0.};
double NormOnMaxDPDsDxETL40keVEe20GeV[nX]={0.00982587, 0.0640006, 0.173741, 0.323592, 0.486847, 0.639655, 0.767448, 0.86476, 0.932354, 0.974144, 0.9546, 0.817373, 0.683658, 0.574567, 0.490293, 0.424077, 0.372751, 0.33186, 0.299665, 0.273717, 0.253125, 0.236496, 0.223351, 0.212849, 0.204713, 0.198384, 0.197346, 0.196308, 0.19537, 0.194432, 0.193555, 0.192678, 0.191692, 0.190706, 0.18883, 0.0655192, 0.0597553, 0.0539914, 0.0482275, 0.0424636, 0.0366997, 0.0309358, 0.0154679, 0., 0.};
double NormOnMaxDPDsDxETL50keVEe20GeV[nX]={0.00532153, 0.0360578, 0.10318, 0.204505, 0.328822, 0.461599, 0.589718, 0.703929, 0.799208, 0.874036, 0.996994, 0.92329, 0.803932, 0.692014, 0.598943, 0.522969, 0.462524, 0.413602, 0.374624, 0.342965, 0.317688, 0.297189, 0.280932, 0.267911, 0.257808, 0.249939, 0.248648, 0.247357, 0.24619, 0.245023, 0.243931, 0.242838, 0.241607, 0.240376, 0.238023, 0.0825912, 0.0753254, 0.0680597, 0.0607939, 0.0535282, 0.0462624, 0.0389966, 0.0194983, 0., 0.};
double NormOnMaxDPDsDxETL60keVEe20GeV[nX]={0.00320612, 0.022254, 0.0657101, 0.135305, 0.227044, 0.333351, 0.445461, 0.555379, 0.656959, 0.746257, 0.979062, 0.982423, 0.894189, 0.790961, 0.69601, 0.614531, 0.547526, 0.492208, 0.447476, 0.410791, 0.381278, 0.357217, 0.338057, 0.322668, 0.310701, 0.301369, 0.299836, 0.298304, 0.296918, 0.295533, 0.294234, 0.292936, 0.291468, 0.290001, 0.287177, 0.0996522, 0.0908855, 0.0821189, 0.0733522, 0.0645856, 0.0558189, 0.0470523, 0.0235261, 0., 0.};
double NormOnMaxDPDsDxETL70keVEe20GeV[nX]={0.00207851, 0.014665, 0.0441947, 0.0933044, 0.161124, 0.244053, 0.336884, 0.433937, 0.529961, 0.620699, 0.921582, 1., 0.953638, 0.868911, 0.77891, 0.696482, 0.625824, 0.566043, 0.516822, 0.475981, 0.442819, 0.415616, 0.393845, 0.376299, 0.362619, 0.351937, 0.35018, 0.348424, 0.346835, 0.345246, 0.343757, 0.342267, 0.340576, 0.338885, 0.335607, 0.116465, 0.106219, 0.0959734, 0.0857277, 0.075482, 0.0652363, 0.0549906, 0.0274953, 0., 0.};
double NormOnMaxDPDsDxETL100keVEe20GeV[nX]={0.000756214, 0.00549222, 0.0170987, 0.0375426, 0.0678644, 0.108195, 0.157848, 0.215478, 0.279283, 0.347211, 0.678994, 0.90322, 0.990362, 0.992817, 0.948328, 0.886847, 0.821895, 0.760423, 0.705646, 0.65787, 0.617551, 0.58361, 0.555881, 0.533223, 0.515371, 0.50134, 0.499026, 0.496712, 0.494615, 0.492518, 0.49054, 0.488563, 0.486282, 0.484, 0.479439, 0.166418, 0.151778, 0.137138, 0.122498, 0.107857, 0.0932172, 0.0785771, 0.0392885, 0., 0.};
double NormOnMaxDPDsDxETL150keVEe20GeV[nX]={0.00023178, 0.00172572, 0.00549589, 0.012375, 0.023025, 0.0379292, 0.0573855, 0.0815049, 0.110219, 0.143292, 0.357715, 0.594832, 0.789335, 0.918624, 0.981894, 1., 0.986949, 0.957999, 0.921234, 0.882768, 0.845921, 0.812327, 0.783155, 0.758352, 0.738227, 0.722142, 0.719466, 0.716791, 0.714352, 0.711913, 0.709581, 0.707248, 0.704414, 0.70158, 0.695399, 0.24152, 0.220273, 0.199027, 0.17778, 0.156533, 0.135286, 0.114039, 0.0570194, 0., 0.};
double NormOnMaxDPDsDxETL200keVEe20GeV[nX]={0.0000963633, 0.000728473, 0.00234722, 0.00534591, 0.0100692, 0.0168127, 0.0258195, 0.0372778, 0.051318, 0.0680113, 0.190793, 0.359157, 0.541748, 0.706983, 0.834508, 0.922751, 0.973134, 0.996399, 0.999149, 0.989953, 0.97357, 0.954367, 0.934869, 0.916737, 0.901107, 0.888228, 0.886056, 0.883884, 0.881883, 0.879881, 0.877902, 0.875923, 0.873224, 0.870525, 0.8636, 0.300184, 0.273776, 0.247369, 0.220961, 0.194554, 0.168146, 0.141739, 0.0708695, 0., 0.};
double NormOnMaxDPDsDxETL300keVEe20GeV[nX]={0.0000245039, 0.000188889, 0.00061708, 0.0014223, 0.00271021, 0.00457982, 0.00712364, 0.010427, 0.0145679, 0.0196163, 0.0608482, 0.12864, 0.22264, 0.333515, 0.451793, 0.566977, 0.670516, 0.75872, 0.828688, 0.882565, 0.921328, 0.948883, 0.967331, 0.979906, 0.988419, 0.994753, 0.995805, 0.996857, 0.997779, 0.9987, 0.99935, 1., 0.999548, 0.999095, 0.993582, 0.34617, 0.315718, 0.285266, 0.254813, 0.224361, 0.193909, 0.163457, 0.0817284, 0., 0.};
double NormOnMaxDPDsDxETL400keVEe20GeV[nX]={0.00000880611, 0.000068746, 0.000226594, 0.000526001, 0.00100863, 0.00171463, 0.00268284, 0.00395083, 0.00555481, 0.0075296, 0.0243387, 0.054029, 0.0995918, 0.159825, 0.233937, 0.317526, 0.406751, 0.496722, 0.583202, 0.663405, 0.734766, 0.797161, 0.849976, 0.894703, 0.931884, 0.963302, 0.968828, 0.974354, 0.979459, 0.984563, 0.989112, 0.993661, 0.99683, 1., 0.997873, 0.348797, 0.318115, 0.287433, 0.256751, 0.226068, 0.195386, 0.164704, 0.0823518, 0., 0.};
double NormOnMaxDPDsDxETL500keVEe20GeV[nX]={0.00000413059, 0.0000325442, 0.000107978, 0.000251951, 0.000485242, 0.00082814, 0.00130058, 0.0019222, 0.00271236, 0.00369016, 0.0121877, 0.0277345, 0.0528238, 0.0879681, 0.134582, 0.191529, 0.258475, 0.332837, 0.412681, 0.494981, 0.577165, 0.656973, 0.732291, 0.802262, 0.865757, 0.923067, 0.933586, 0.944105, 0.954058, 0.96401, 0.973242, 0.982475, 0.990144, 0.997813, 1., 0.351005, 0.320129, 0.289254, 0.258379, 0.227504, 0.196629, 0.165753, 0.0828767, 0., 0.};
double NormOnMaxDPDsDxETL600keVEe20GeV[nX]={0.00000229116, 0.0000181836, 0.0000606457, 0.000142086, 0.000274576, 0.000469994, 0.000740107, 0.00109662, 0.0015512, 0.00211551, 0.00707985, 0.016345, 0.0317238, 0.0539801, 0.0848028, 0.124274, 0.173485, 0.231581, 0.298638, 0.372882, 0.453282, 0.537572, 0.623976, 0.710418, 0.795009, 0.87636, 0.891971, 0.907582, 0.922716, 0.937849, 0.952311, 0.966773, 0.979679, 0.992585, 0.999977, 0.352777, 0.321748, 0.290718, 0.259689, 0.228659, 0.19763, 0.1666, 0.0833002, 0., 0.};
double NormOnMaxDPDsDxETL700keVEe20GeV[nX]={0.00000142556, 0.0000113838, 0.00003813, 0.0000896347, 0.000173697, 0.000298031, 0.000470316, 0.000698234, 0.000989496, 0.00135186, 0.00456535, 0.010638, 0.0208926, 0.0360308, 0.0575591, 0.0859506, 0.122703, 0.16786, 0.222602, 0.286337, 0.359577, 0.440995, 0.530196, 0.625242, 0.724844, 0.826761, 0.847239, 0.867717, 0.88808, 0.908443, 0.928463, 0.948482, 0.967228, 0.985974, 0.999383, 0.354668, 0.323474, 0.29228, 0.261086, 0.229893, 0.198699, 0.167505, 0.0837526, 0., 0.};
double NormOnMaxDPDsDxETL800keVEe20GeV[nX]={0.000000962116, 0.00000772526, 0.0000259705, 0.0000612249, 0.000118923, 0.00020446, 0.000323226, 0.000480634, 0.000682138, 0.000933248, 0.00317302, 0.00744158, 0.0147313, 0.0256319, 0.0414029, 0.0626053, 0.0907447, 0.126269, 0.170826, 0.224605, 0.289186, 0.364301, 0.451139, 0.548759, 0.657563, 0.775735, 0.800587, 0.825439, 0.85082, 0.876201, 0.901878, 0.927555, 0.952588, 0.97762, 0.997756, 0.356515, 0.325161, 0.293807, 0.262453, 0.231099, 0.199745, 0.168391, 0.0841955, 0., 0.};
double NormOnMaxDPDsDxETL900keVEe20GeV[nX]={0.000000689428, 0.00000556394, 0.0000187647, 0.0000443473, 0.0000863163, 0.000148659, 0.000235369, 0.000350469, 0.000498023, 0.000682148, 0.00233172, 0.00549482, 0.0109392, 0.019152, 0.0311738, 0.0475488, 0.0696573, 0.0980996, 0.13465, 0.179935, 0.236143, 0.303847, 0.385583, 0.481708, 0.59487, 0.724846, 0.753431, 0.782016, 0.812009, 0.842001, 0.87324, 0.904478, 0.936089, 0.967701, 0.995203, 0.358343, 0.326831, 0.295319, 0.263807, 0.232294, 0.200782, 0.16927, 0.0846351, 0., 0.};
  // initialize DsDx matrix
  for (int j = 0; j < nX; j++) {
    NormDsDx[0][j] = NormOnMaxDPDsDxETL1keVEe20GeV[j];
    NormDsDx[1][j] = NormOnMaxDPDsDxETL10keVEe20GeV[j];
    NormDsDx[2][j] = NormOnMaxDPDsDxETL20keVEe20GeV[j];
    NormDsDx[3][j] = NormOnMaxDPDsDxETL30keVEe20GeV[j];
    NormDsDx[4][j] = NormOnMaxDPDsDxETL40keVEe20GeV[j];
    NormDsDx[5][j] = NormOnMaxDPDsDxETL50keVEe20GeV[j];
    NormDsDx[6][j] = NormOnMaxDPDsDxETL60keVEe20GeV[j];
    NormDsDx[7][j] = NormOnMaxDPDsDxETL70keVEe20GeV[j];
    NormDsDx[8][j] = NormOnMaxDPDsDxETL100keVEe20GeV[j];
    NormDsDx[9][j] = NormOnMaxDPDsDxETL150keVEe20GeV[j];
    NormDsDx[10][j] = NormOnMaxDPDsDxETL200keVEe20GeV[j];
    NormDsDx[11][j] = NormOnMaxDPDsDxETL300keVEe20GeV[j];
    NormDsDx[12][j] = NormOnMaxDPDsDxETL400keVEe20GeV[j];
    NormDsDx[13][j] = NormOnMaxDPDsDxETL500keVEe20GeV[j];
    NormDsDx[14][j] = NormOnMaxDPDsDxETL600keVEe20GeV[j];
    NormDsDx[15][j] = NormOnMaxDPDsDxETL700keVEe20GeV[j];
    NormDsDx[16][j] = NormOnMaxDPDsDxETL800keVEe20GeV[j];
    NormDsDx[17][j] = NormOnMaxDPDsDxETL900keVEe20GeV[j];
  }

  // bounds for X

  if (Xtest < XX00[0]) return 0.; // Because the total cross section is obtained from the integration above this

  if (Xtest == XX00[0])
    Xtest = 1.00005 * XX00[0]; //  Lower limit for X

  if (Xtest >= XX00[nX-1] )
    Xtest  = 0.99995 * XX00[nX-1]; // Upper limit for X

  // bounds for mass of Dark state MA
  if (MAtest <= MMAA[0])
    MAtest = 1.00005 * MMAA[0]; //  Lower limit for mass

  if (MAtest >= MMAA[nMADS-1] )
    MAtest  = 0.99995 * MMAA[nMADS-1]; // Upper limit for mass

  return BilinearInterpolation<nX> (MAtest, Xtest, MMAA, XX00, NormDsDx, nMADS, 0);
}
